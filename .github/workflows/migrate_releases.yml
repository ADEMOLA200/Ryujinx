name: Migrate Releases from Multiple Sources with Auto Changelog

on:
  workflow_dispatch:

jobs:
  migrate-releases:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Debug Secrets
        run: |
          if [[ -z "${{ secrets.RELEASE_TOKEN }}" ]]; then
            echo "‚ùå RELEASE_TOKEN is missing!"
            exit 1
          else
            echo "‚úÖ RELEASE_TOKEN is set."
          fi

      - name: Install GitHub CLI
        run: |
          sudo apt update
          sudo apt install -y gh

      - name: Authenticate GitHub CLI
        run: echo "${{ secrets.RELEASE_TOKEN }}" | gh auth login --with-token

      - name: Check GitHub API Rate Limits
        run: gh api rate_limit

      - name: Clone Source Repositories
        run: |
          git clone https://github.com/Ryubing/Canary-Releases.git source-canary
          cd source-canary
          git fetch --tags
          cd ..
          git clone https://github.com/Goodfeat/Ruy-Nightly-Canary.git source-nightly
          cd source-nightly
          git fetch --tags
        working-directory: ${{ github.workspace }}

      - name: Migrate Releases from Multiple Sources
        run: |
          set -e
          DEST_REPO="ADEMOLA200/RyuNX"
          
          for SOURCE in "canary" "nightly"; do
            if [ "$SOURCE" = "canary" ]; then
              SOURCE_REPO="Ryubing/Canary-Releases"
              SOURCE_DIR="source-canary"
              RELEASE_TYPE="Canary"
              CHANGLOG_URL_PREFIX="Canary-"
              RELEASE_NOTE_HEADER="## Canary builds:"
              TABLE="| Platform           | Artifact                     |
          |--------------------|------------------------------|
          | Windows 64-bit     | Canary Windows Artifact      |
          | Windows ARM 64-bit | Canary Windows ARM Artifact  |
          | Linux 64-bit       | Canary Linux Artifact        |
          | Linux ARM 64-bit   | Canary Linux Artifact        |
          | macOS              | Canary macOS Artifact        |"
                        LINK_BASE="https://github.com/Ryubing/Canary-Releases"
                      elif [ "$SOURCE" = "nightly" ]; then
                        SOURCE_REPO="Goodfeat/Ruy-Nightly-Canary"
                        SOURCE_DIR="source-nightly"
                        RELEASE_TYPE="Nightly"
                        CHANGLOG_URL_PREFIX="Nightly-"
                        RELEASE_NOTE_HEADER="## Nightly builds:"
                        TABLE="| Platform           | Artifact                     |
          |--------------------|------------------------------|
          | Windows 64-bit     | Nightly Windows Artifact     |
          | Windows ARM 64-bit | Nightly Windows ARM Artifact |
          | Linux 64-bit       | Nightly Linux Artifact       |
          | Linux ARM 64-bit   | Nightly Linux Artifact       |
          | macOS              | Nightly macOS Artifact       |"
              LINK_BASE="https://github.com/Goodfeat/Ruy-Nightly-Canary"
            fi

            echo "Processing releases from $SOURCE_REPO"
            SOURCE_TAGS=$(gh api --paginate "/repos/$SOURCE_REPO/releases" --jq '.[].tag_name')
            if [ -z "$SOURCE_TAGS" ]; then
              echo "‚ùå No releases found in $SOURCE_REPO!"
              continue
            fi
            echo "Found releases:"
            echo "$SOURCE_TAGS"
            for TAG in $SOURCE_TAGS; do
              echo "üöÄ Processing release: $TAG from $SOURCE"
              if gh release view "$TAG" -R "$DEST_REPO" > /dev/null 2>&1; then
                echo "‚è≠Ô∏è Release $TAG already exists. Skipping..."
                continue
              fi

              cd $SOURCE_DIR
              if ! git rev-parse "$TAG" >/dev/null 2>&1; then
                PREV_TAG=""
                CHANGELOG_URL="${LINK_BASE}/releases/$TAG"
              else
                PREV_TAG=$(git tag --sort=-v:refname | awk "/^$TAG\$/{found=1; next} found{print; exit}")
                if [ -z "$PREV_TAG" ]; then
                  CHANGELOG_URL="${LINK_BASE}/releases/$TAG"
                else
                  CHANGELOG_URL="${LINK_BASE}/compare/${CHANGLOG_URL_PREFIX}${PREV_TAG}...${CHANGLOG_URL_PREFIX}${TAG}"
                fi
              fi
              cd ..
              DESCRIPTION="${RELEASE_NOTE_HEADER}

            These builds are experimental and may sometimes not work, use [regular builds](https://github.com/Ryujinx/release-channel-master/releases) instead if that sounds like something you don't want to deal with.

            ${TABLE}

            **Changelog:** ${CHANGELOG_URL}
            "
              DESCRIPTION_CLEANED=$(echo "$DESCRIPTION" | sed 's/^ *//g')
              gh release create "$TAG" -R "$DEST_REPO" --title "$TAG ($RELEASE_TYPE)" --notes "$DESCRIPTION_CLEANED"
              ASSET_URLS=$(gh release view "$TAG" -R "$SOURCE_REPO" --json assets -q '.assets[].url')
              for URL in $ASSET_URLS; do
                FILENAME=$(basename "$URL")
                echo "üì• Downloading $FILENAME..."
                curl -L -o "$FILENAME" "$URL"
                echo "üì§ Uploading $FILENAME..."
                gh release upload "$TAG" -R "$DEST_REPO" "$FILENAME" || echo "‚ö†Ô∏è Failed to upload $FILENAME"
                rm -f "$FILENAME"
              done
              echo "‚úÖ Successfully migrated release $TAG from $SOURCE!"
              sleep 1
            done
          done
        working-directory: ${{ github.workspace }}
