name: Migrate Releases

on:
  workflow_dispatch:

jobs:
  migrate-releases:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Debug Secrets
        run: |
          if [[ -z "${{ secrets.RELEASE_TOKEN }}" ]]; then
            echo "❌ RELEASE_TOKEN is missing!"
            exit 1
          else
            echo "✅ RELEASE_TOKEN is set."
          fi

      - name: Install GitHub CLI
        run: |
          sudo apt update
          sudo apt install -y gh

      - name: Authenticate GitHub CLI
        run: echo "${{ secrets.RELEASE_TOKEN }}" | gh auth login --with-token

      - name: Check GitHub API Rate Limits
        run: gh api rate_limit

      - name: Fetch and Migrate Releases
        run: |
          set -e

          SOURCE_REPO="Ryubing/Canary-Releases"
          DEST_REPO="ADEMOLA200/RyuNX"

          RELEASES=$(gh release list -R "$SOURCE_REPO" --json tagName -q '.[].tagName')

          for TAG in $RELEASES; do
              echo "Processing release: $TAG"
              ASSET_URLS=$(gh release view "$TAG" -R "$SOURCE_REPO" --json assets -q '.assets[].url')
              if gh release view "$TAG" -R "$DEST_REPO" > /dev/null 2>&1; then
                  echo "Release $TAG already exists. Deleting it..."
                  gh release delete "$TAG" -R "$DEST_REPO" --yes
              fi
              gh release create "$TAG" -R "$DEST_REPO" --title "$TAG" --notes $'Canary builds:\nThese builds are experimental and may sometimes not work, use regular builds instead if that sounds like something you don\'t want to deal with.\n\nPlatform\tArtifact\nWindows 64-bit\tCanary Windows Artifact\nWindows ARM 64-bit\tCanary Windows ARM Artifact\nLinux 64-bit\tCanary Linux Artifact\nLinux ARM 64-bit\tCanary Linux Artifact\nmacOS\tCanary macOS Artifact\n\nMigrated from '"$SOURCE_REPO"
              for URL in $ASSET_URLS; do
                  FILENAME=$(basename "$URL")
                  echo "Downloading $FILENAME..."
                  curl -L -o "$FILENAME" "$URL"
                  echo "Uploading $FILENAME to $DEST_REPO"
                  gh release upload "$TAG" -R "$DEST_REPO" "$FILENAME"
              done
              echo "✅ Release $TAG migrated successfully!"
          done
